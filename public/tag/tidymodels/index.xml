<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tidymodels | Lucas Bagge</title>
    <link>/tag/tidymodels/</link>
      <atom:link href="/tag/tidymodels/index.xml" rel="self" type="application/rss+xml" />
    <description>tidymodels</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Isabella Benabaye, 2021</copyright><lastBuildDate>Mon, 17 Feb 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/sharing_image.jpg</url>
      <title>tidymodels</title>
      <link>/tag/tidymodels/</link>
    </image>
    
    <item>
      <title>Tidymodels, Random Forest og parsnip</title>
      <link>/post/tidymodels-and-parsnip/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/post/tidymodels-and-parsnip/</guid>
      <description>
&lt;link href=&#34;/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduktion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduktion&lt;/h2&gt;
&lt;p&gt;I denne post vil jeg kigger på to modeller.
Den &lt;strong&gt;logistiske regression&lt;/strong&gt; og &lt;strong&gt;random forest&lt;/strong&gt;, hvor de begge bliver brugtblog
som klassifikations modeller.&lt;/p&gt;
&lt;p&gt;Jeg kommer til at gennemgå og beskrive Random Forest da det er en model,
som er forholdsvis ny for mig og der er nogle teoretiske framwork jeg gerne
vil prøve at forklare.&lt;/p&gt;
&lt;p&gt;Desuden kommer vi til at stifte bekendtskab med &lt;code&gt;parsnip&lt;/code&gt; som gør det let at
skifte om til de forskellige modeller. Med det nye framwork fra
&lt;code&gt;tidymodels&lt;/code&gt; kan man skifte utrolig let fra &lt;code&gt;glm&lt;/code&gt; til en &lt;strong&gt;cross validated&lt;/strong&gt;
random forest med &lt;code&gt;ranger&lt;/code&gt;
med få linjers koder.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;random-forest&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Random forest&lt;/h2&gt;
&lt;p&gt;Det er en af de mest populære machine learning algoritmer og kan både bruges
som en regresssion og klassifikation model.&lt;/p&gt;
&lt;p&gt;Som navnet antyder så laver algoritmen en skov med forskellige beslutningstræer.
Desto flere træer desto mere robust er modellen. Navnet random kommer grundet to koncepter&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Et randomiseret sample af trænings data, når man bygger hver enkelt træ.&lt;/li&gt;
&lt;li&gt;Et randomiseret subsæt af features, når man splitter noder.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Når vi træer hver træ så lærer den fra et random sample af data punkter.
Samples er trukket med erstatning, som kaldes &lt;strong&gt;bootstrapping&lt;/strong&gt;, som betyder
at et sample vil blive brugt flere gange i et enkelt træ. Ideen er at ved at
træne hver træ med forskellige samples, så vil vi få en lavere varians og
ikke få et højere bias.&lt;/p&gt;
&lt;p&gt;Ens prediction fås ved at tage gennmsnittet af predictor for hver beslutningstræ.
Denne procedure kaldes for &lt;strong&gt;bagging&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Fordele er man kan bruge den som klassifikation og regression. Den vil ikke overfitte.
Den kan håndtere store datasæt med mange dimensioner.&lt;/p&gt;
&lt;p&gt;Ulemper er den ikke er så god til regressioner. Den er ikke god til at forudsige.
Der er heller ikke meget kontrol over modellen.&lt;/p&gt;
&lt;p&gt;Dog er modellen anvendelig i mange sektor såsom banker, forsikringsselskaber,
forretninger somkan bruges til at finde de loyolae kunder. Den kan også bruges i
aktiemarkedet til ast finde opførelsen af en aktie.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data&lt;/h2&gt;
&lt;p&gt;I dette projekt bruger jeg data
fra Telco Customer Churn. Data indeholder 7043 rækker som hver repræsentere en kunde.
Der er 21 kolonner som er mulige predictor, der giver information til vi kan
forecast opførelse og give indsigt på forebyggelsesprogrammer.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Churn&lt;/code&gt; er den afhængige variable og viser om kunden har forladt virksomheden
indenfor den seneste måned.&lt;/p&gt;
&lt;p&gt;Jeg bruger funnktionen &lt;code&gt;skim&lt;/code&gt; til at skabe et overblik over mit data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;telco &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/treselle-systems/customer_churn_analysis/master/WA_Fn-UseC_-Telco-Customer-Churn.csv&amp;quot;)
telco %&amp;gt;% 
  skimr::skim()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-1&#34;&gt;Table 1: &lt;/span&gt;Data summary&lt;/caption&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Piped data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Number of rows&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7043&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Number of columns&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;_______________________&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Column type frequency:&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;________________________&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Group variables&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: character&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;skim_variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_missing&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;complete_rate&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;min&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;max&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;empty&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_unique&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;whitespace&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;customerID&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7043&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;gender&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Partner&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Dependents&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;PhoneService&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;MultipleLines&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;InternetService&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;OnlineSecurity&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;OnlineBackup&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;DeviceProtection&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;TechSupport&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;StreamingTV&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;StreamingMovies&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Contract&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;PaperlessBilling&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;PaymentMethod&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Churn&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: numeric&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;skim_variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_missing&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;complete_rate&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mean&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;sd&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p0&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p25&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p50&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p75&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p100&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;hist&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;SeniorCitizen&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.16&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.37&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▇▁▁▁▂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tenure&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32.37&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;24.56&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;55.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;72.00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▇▃▃▃▆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;MonthlyCharges&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64.76&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;30.09&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18.25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35.50&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;70.35&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;89.85&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;118.75&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▇▅▆▇▅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;TotalCharges&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2283.30&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2266.77&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18.80&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;401.45&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1397.47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3794.74&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8684.80&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▇▂▂▂▁&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Her er en række ting at lægge mærke til her.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;customerID&lt;/strong&gt; er en unik id for hver række og af den grund har den ingen
deskriptiv eller predictive power og den skal fjernes.&lt;/li&gt;
&lt;li&gt;Der er meget få &lt;strong&gt;NA&lt;/strong&gt; værdier, så de kan jeg tillade mig at slette.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;telco &amp;lt;- telco %&amp;gt;% 
  select(-customerID) %&amp;gt;% 
  drop_na()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;modellering-med-tidymodels&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Modellering med &lt;code&gt;tidymodels&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Denne post giver også en introduktion til tidymodels. Derfor vil modellen
være simpel og kommer til at bestå af &lt;strong&gt;logistic regression&lt;/strong&gt; model uden meget
data bearbejdring.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;train-and-test-split&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Train and test split&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rsample()&lt;/code&gt; kan bruges til at lave en randomiserede træning og test data,
som selvfølgelig er konstrueret udfra vores orginale telco data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(1972)

train_test_split &amp;lt;- rsample::initial_split(
  data = telco,
  prop = 0.8
)
train_test_split&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;Analysis/Assess/Total&amp;gt;
## &amp;lt;5626/1406/7032&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ud fra ovenstående har vi at de 7032 kunder er blevet delt ud, og de 5626 er blevet
sat i træningssættet. Vi gemmer dem ned i deres eget data frame;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_tbl &amp;lt;- train_test_split %&amp;gt;% training() %&amp;gt;% 
  unnest()
test_tbl &amp;lt;- train_test_split %&amp;gt;% testing()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;en-bage-opskrift&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;En bage opskrift&lt;/h2&gt;
&lt;p&gt;For at lave en del af arbejde for at bygge modellen bruger vi &lt;code&gt;recipe()&lt;/code&gt;. Denne
pakke bruger &lt;em&gt;bage metafor&lt;/em&gt; til at behandle data og foretage diverse præprocessor
såsom, missing values, fjerne predictor, centering og scaling osv..&lt;/p&gt;
&lt;p&gt;Det første man gør er at definere &lt;code&gt;recipe&lt;/code&gt; og de transformationer man vil bruge
på ens data. Der er ikke meget at gøre i dette tilfælde, udover at tranaformerer
til faktor.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;recipe_simple &amp;lt;- function(dataset) {
  recipe(Churn ~ ., data = dataset) %&amp;gt;% 
    step_string2factor(all_nominal(), -all_outcomes()) %&amp;gt;% 
    prep(data = dataset)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For at undgår man vi har en &lt;strong&gt;data lækage&lt;/strong&gt; (oveføre information mellem træning
og test data), skal data være ‘prepped’ ved
kun at bruge &lt;code&gt;train_tbl&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;recipe_prepped &amp;lt;- recipe_simple(dataset = train_tbl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Som den sidste del så skal vi &lt;em&gt;bage opskriften&lt;/em&gt; for at alle præprocessor
bliver inkluderet i data sættene.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_baked &amp;lt;- bake(recipe_prepped, new_data = train_tbl)
test_baked &amp;lt;- bake(recipe_prepped, new_data = test_tbl)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-modellen&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fit modellen&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Tidymodels&lt;/code&gt; er det helt nye indspark fra tidyverse folkene på at skabe et framwork
for machine learning.
Hertil er der blevet lavet en del justeringer og nye pakker. En central pakke i
dette framwork er &lt;code&gt;parsnip&lt;/code&gt;,som skaber en adgang til mange machine learning pakker
uden man skal kunne syntaksen til dem alle.&lt;/p&gt;
&lt;p&gt;Man skal følge tre trin:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Bestem &lt;strong&gt;typen af modellen&lt;/strong&gt; og &lt;strong&gt;mode&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Bestem &lt;strong&gt;engine&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Bestem model specifikationer og data der skal bruges.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;logistic_glm &amp;lt;- logistic_reg(mode = &amp;quot;classification&amp;quot;) %&amp;gt;% 
  set_engine(&amp;quot;glm&amp;quot;) %&amp;gt;% 
  fit(Churn ~ .,
      data = train_baked)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Som sagt så kan du vælge en masse andre engine. I dette tilfælde hvor vi bruge en
logistisk regression, så kan vi vælge; &lt;code&gt;glm&lt;/code&gt;, &lt;code&gt;glmnet&lt;/code&gt;, &lt;code&gt;stan&lt;/code&gt;, &lt;code&gt;spark&lt;/code&gt; og &lt;code&gt;keras&lt;/code&gt;.
Det smarte er vi bare kan skifte det ud og så klare parsnip transitionen.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hvor-godt-klare-modellen-sig&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hvor godt klare modellen sig?&lt;/h2&gt;
&lt;p&gt;Det er væsentlig at se hvor god modellen er og her bruger vi pakken
&lt;code&gt;yardstick&lt;/code&gt;, som gør det let at beregne forskellige måleværktøjer.
Før man kan beregne disse måle enheder skal vi beregne nogle
predictor ved at bruge &lt;code&gt;test_baked&lt;/code&gt; til predict funktionen.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prediction_glm &amp;lt;- logistic_glm %&amp;gt;% 
  predict(new_data = test_baked) %&amp;gt;%
  bind_cols(test_baked %&amp;gt;%  select(Churn))

head(prediction_glm)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 2
##   .pred_class Churn
##   &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;
## 1 Yes         No   
## 2 No          No   
## 3 No          No   
## 4 No          No   
## 5 No          No   
## 6 No          No&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Der kan benyttes mange matricer til at undersøge hvor god modellen er,
men fokus for denne post bliver &lt;strong&gt;accuracy&lt;/strong&gt;, &lt;strong&gt;precision&lt;/strong&gt;, &lt;strong&gt;recall&lt;/strong&gt; og &lt;strong&gt;F1_score&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Disse mål bliver udledt af &lt;strong&gt;Confusion Matrix&lt;/strong&gt;, som er en tabel der beskriver
hvor godt ens klassifikations model klarer sig. Denne matrice er i sig selv ikke svær at
forstå, da den angiver antallet af; &lt;em&gt;false positives&lt;/em&gt;, &lt;em&gt;false negatives&lt;/em&gt;, &lt;em&gt;true positives&lt;/em&gt;
og &lt;em&gt;true negatives&lt;/em&gt;. Dog er nogle af målene, som udledes herfra svære koncepter og kræver
reflektion for at forstå deres betydning.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prediction_glm %&amp;gt;% 
  conf_mat(Churn, .pred_class) %&amp;gt;% 
  pluck(1) %&amp;gt;% 
  as_tibble() %&amp;gt;% 
  ggplot(aes(Prediction, Truth, alpha = n)) +
  geom_tile(show.legend = FALSE) +
  geom_text(aes(label = n), colour = &amp;quot;white&amp;quot;, alpha = 0.5, size = 12)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-17-tidymodels-and-parship/index.en_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;2400&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Modellen &lt;strong&gt;Accuracy&lt;/strong&gt; er andel af prediction modellen ramte plet og kan udregnes ved at
lade predictions_glm gå gennem metrics funktionen. Dog er den ikke så troværdig, hvis
ens data er ubalanceret.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prediction_glm %&amp;gt;% 
  metrics(Churn, .pred_class) %&amp;gt;% 
  select(-.estimator) %&amp;gt;% 
  filter(.metric == &amp;quot;accuracy&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 2
##   .metric  .estimate
##   &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;
## 1 accuracy     0.806&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Modellen får altså en score på 78%.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Precision&lt;/strong&gt; målser hvor sensitiv modellen er overfor False Positive, mens
Recall ser hvor sensitiv modellen er for False Negative.&lt;/p&gt;
&lt;p&gt;Disse metricer er meget vigtig informationer for virksomheder fordi man så kan
forudsige hvilke kunder der er i en risiko gruppe for at forlade forretningen.
Herfra kan man så benytte sig af en fastholdessstrategi. Desuen kan
man bruge oplysning til ikke at bruge penge på kudner der alligevel
har tænkt sig at forlade virksomheden.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tibble(
  &amp;quot;precision&amp;quot; =
    precision(prediction_glm, Churn, .pred_class) %&amp;gt;% 
    select(.estimate),
  &amp;quot;recall&amp;quot; =
    recall(prediction_glm, Churn, .pred_class) %&amp;gt;% 
    select(.estimate)
) %&amp;gt;% 
  unnest() %&amp;gt;% 
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;precision&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;recall&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;0.8466368&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9024857&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Den anden og sidste populær måleværktøj er F1_score, som er det harmoniske gennemsnit
af precision og recall. Den perfekte score på 1 fås når precision og recall er perfekte.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prediction_glm %&amp;gt;%
  f_meas(Churn, .pred_class) %&amp;gt;%
  select(-.estimator) %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;.metric&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;.estimate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;f_meas&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8736696&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;fra-logitstik-regression-til-random-forest&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fra logitstik regression til Random Forest&lt;/h2&gt;
&lt;p&gt;Det er utrolig simpel at skifte ens model ud med en anden. Den tidligere
anvendte logistisk regressions model kan vi hurtig skifte ud med en &lt;strong&gt;Random
Forest&lt;/strong&gt; model med &lt;code&gt;ranger&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;croos-validation-sæt-op&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Croos validation sæt op&lt;/h2&gt;
&lt;p&gt;For at styke modellens prediktive kræft kan man foretage cross validation, som
tit bliver sat op med 10 folder. Det kan implementeres med &lt;code&gt;vfold_cv()&lt;/code&gt; fra &lt;code&gt;rsample&lt;/code&gt;,
som splitter det initale trænings data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(123)
cross_val_tbl &amp;lt;- 
   vfold_cv(train_tbl, v = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vi kan genkende de 5626 fra vores tærningssæt. I hver runde vil 563 observationer
blive brugt til validere modellen for det specifikke fold.&lt;/p&gt;
&lt;p&gt;For at ikke blive forvirret over bruget af initial træsning/test split til det
man bruger i cross validation benytter man begreberne &lt;code&gt;analysis&lt;/code&gt; (estimer modellen)
og &lt;code&gt;assessment&lt;/code&gt; (valider estimater).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;opdater-recipe&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Opdater recipe&lt;/h2&gt;
&lt;p&gt;For at bruge Random Forest skal alle numeriske værdier være centred og scaled
og alle faktor skal være dummies.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;split &amp;lt;- initial_split(telco, prop = 0.8)
train_data &amp;lt;- training(split)
test_data &amp;lt;- testing(split)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For at skifte over til en anden model er utroligt simepel. Her ændre vi til
random forest i typen af modellen og tilføjer dens hyperparameter.&lt;/p&gt;
&lt;p&gt;For at gøre processen lidt hurtigere propper jeg det hele i en funktion, som
estimer modellen på tværs af alle folder og retuner det i en tibble. Desuden skal
der tilføjes et skridt mere for at vi mapper de forskellige folder.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;recipe_rf &amp;lt;- function(dataset) {
  recipe(Churn ~ ., data = dataset) %&amp;gt;%
    step_string2factor(all_nominal(), -all_outcomes()) %&amp;gt;%
    step_dummy(all_nominal(), -all_outcomes()) %&amp;gt;%
    step_center(all_numeric()) %&amp;gt;%
    step_scale(all_numeric()) %&amp;gt;%
    prep(data = dataset)
}

rf_fun &amp;lt;- function(split, id, try, tree) {
   
  analysis_set &amp;lt;- split %&amp;gt;% analysis()
  analysis_prepped &amp;lt;- analysis_set %&amp;gt;% recipe_rf()
  analysis_baked &amp;lt;- analysis_prepped %&amp;gt;% bake(new_data = analysis_set)
  model_rf &amp;lt;-
    rand_forest(
      mode = &amp;quot;classification&amp;quot;,
      mtry = try,
      trees = tree
    ) %&amp;gt;%
    set_engine(&amp;quot;ranger&amp;quot;,
      importance = &amp;quot;impurity&amp;quot;
    ) %&amp;gt;%
    fit(Churn ~ ., data = analysis_baked)
  assessment_set &amp;lt;- split %&amp;gt;% assessment()
  assessment_prepped &amp;lt;- assessment_set %&amp;gt;% recipe_rf()
  assessment_baked &amp;lt;- assessment_prepped %&amp;gt;% bake(new_data = assessment_set)
  tibble(
    &amp;quot;id&amp;quot; = id,
    &amp;quot;truth&amp;quot; = assessment_baked$Churn,
    &amp;quot;prediction&amp;quot; = model_rf %&amp;gt;%
      predict(new_data = assessment_baked) %&amp;gt;%
      unlist()
  )
  
}

pred_rf &amp;lt;- map2_df(
  .x = cross_val_tbl$splits,
  .y = cross_val_tbl$id,
  ~ rf_fun(split = .x, id = .y, try = 3, tree = 200)
)
head(pred_rf)  &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   id     truth prediction
##   &amp;lt;chr&amp;gt;  &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;     
## 1 Fold01 Yes   No        
## 2 Fold01 Yes   Yes       
## 3 Fold01 No    No        
## 4 Fold01 No    No        
## 5 Fold01 No    No        
## 6 Fold01 No    No&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pred_rf %&amp;gt;%
  conf_mat(truth, prediction) %&amp;gt;%
  summary() %&amp;gt;%
  select(-.estimator) %&amp;gt;%
  filter(.metric %in%
    c(&amp;quot;accuracy&amp;quot;, &amp;quot;precision&amp;quot;, &amp;quot;recall&amp;quot;, &amp;quot;f_meas&amp;quot;)) %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;.metric&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;.estimate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;accuracy&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7996801&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;precision&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8291502&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;recall&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9147437&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;f_meas&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8698464&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Der er mange matricer til at validere vores model, men vi bruger dem som vi brugte
ved vores logistisk regression.&lt;/p&gt;
&lt;p&gt;Modellen klare sig på lige fod med regressionsmodellen. Man kunne gå tilbage til modellen
og laver yderligere feature eengierning da det ville gøre noget for selve
præcisionen af modellen.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
